-- SQLite migration script to bootstrap the POS database.
-- This script is generated manually from the Prisma schema.  It
-- defines all tables, relations, constraints and indexes.  Primary keys
-- are autoâ€‘incrementing integers.  Foreign key constraints enforce
-- referential integrity.

PRAGMA foreign_keys=OFF;

BEGIN TRANSACTION;

CREATE TABLE IF NOT EXISTS "Category" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "name" TEXT NOT NULL,
  "description" TEXT
);

CREATE TABLE IF NOT EXISTS "Tax" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "name" TEXT NOT NULL,
  "rate" REAL NOT NULL,
  "cess" REAL NOT NULL DEFAULT 0,
  "hsn" TEXT,
  "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "Item" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "sku" TEXT NOT NULL UNIQUE,
  "name" TEXT NOT NULL,
  "description" TEXT,
  "categoryId" INTEGER,
  "taxId" INTEGER,
  "hsnCode" TEXT,
  "brand" TEXT,
  "unit" TEXT NOT NULL DEFAULT 'pcs',
  "mrp" REAL NOT NULL,
  "cost" REAL NOT NULL,
  "reorderLevel" REAL,
  "imageUrl" TEXT,
  "isWeighable" INTEGER NOT NULL DEFAULT 0,
  "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY ("categoryId") REFERENCES "Category" ("id") ON DELETE SET NULL,
  FOREIGN KEY ("taxId") REFERENCES "Tax" ("id") ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS "Barcode" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "itemId" INTEGER NOT NULL,
  "code" TEXT NOT NULL UNIQUE,
  "isPrimary" INTEGER NOT NULL DEFAULT 0,
  FOREIGN KEY ("itemId") REFERENCES "Item" ("id") ON DELETE CASCADE
);
CREATE INDEX IF NOT EXISTS "idx_barcode_code" ON "Barcode" ("code");

CREATE TABLE IF NOT EXISTS "Customer" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "phone" TEXT UNIQUE,
  "name" TEXT,
  "email" TEXT,
  "birthDate" DATETIME,
  "loyaltyPoints" INTEGER NOT NULL DEFAULT 0,
  "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "Vendor" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "name" TEXT NOT NULL,
  "gstin" TEXT,
  "address" TEXT,
  "phone" TEXT,
  "contactPerson" TEXT,
  "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "PurchaseOrder" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "orderNumber" TEXT NOT NULL UNIQUE,
  "vendorId" INTEGER NOT NULL,
  "orderDate" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "expectedDate" DATETIME,
  "status" TEXT NOT NULL,
  "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY ("vendorId") REFERENCES "Vendor" ("id") ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS "PurchaseOrderLine" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "purchaseOrderId" INTEGER NOT NULL,
  "itemId" INTEGER NOT NULL,
  "quantity" REAL NOT NULL,
  "unitCost" REAL NOT NULL,
  "taxId" INTEGER,
  "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY ("purchaseOrderId") REFERENCES "PurchaseOrder" ("id") ON DELETE CASCADE,
  FOREIGN KEY ("itemId") REFERENCES "Item" ("id") ON DELETE CASCADE,
  FOREIGN KEY ("taxId") REFERENCES "Tax" ("id") ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS "GoodsReceipt" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "purchaseOrderId" INTEGER,
  "receiptNumber" TEXT NOT NULL UNIQUE,
  "receiptDate" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "vendorInvoiceNo" TEXT,
  "totalAmount" REAL NOT NULL,
  "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY ("purchaseOrderId") REFERENCES "PurchaseOrder" ("id") ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS "Batch" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "itemId" INTEGER NOT NULL,
  "goodsReceiptId" INTEGER,
  "batchNo" TEXT,
  "expiryDate" DATETIME,
  "manufactureDate" DATETIME,
  "quantity" REAL NOT NULL,
  "cost" REAL NOT NULL,
  "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY ("itemId") REFERENCES "Item" ("id") ON DELETE CASCADE,
  FOREIGN KEY ("goodsReceiptId") REFERENCES "GoodsReceipt" ("id") ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS "StockLedger" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "itemId" INTEGER NOT NULL,
  "batchId" INTEGER,
  "entryDate" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "type" TEXT NOT NULL,
  "reference" TEXT,
  "quantity" REAL NOT NULL,
  "unitCost" REAL,
  "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY ("itemId") REFERENCES "Item" ("id") ON DELETE CASCADE,
  FOREIGN KEY ("batchId") REFERENCES "Batch" ("id") ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS "Promotion" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "name" TEXT NOT NULL,
  "promoType" TEXT NOT NULL,
  "value" REAL NOT NULL,
  "description" TEXT,
  "startDate" DATETIME NOT NULL,
  "endDate" DATETIME NOT NULL,
  "priority" INTEGER NOT NULL DEFAULT 0,
  "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "PromotionItem" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "promotionId" INTEGER NOT NULL,
  "itemId" INTEGER NOT NULL,
  "quantity" REAL,
  FOREIGN KEY ("promotionId") REFERENCES "Promotion" ("id") ON DELETE CASCADE,
  FOREIGN KEY ("itemId") REFERENCES "Item" ("id") ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS "Receipt" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "receiptNumber" TEXT NOT NULL UNIQUE,
  "date" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "customerId" INTEGER,
  "totalBeforeDiscount" REAL NOT NULL,
  "totalDiscount" REAL NOT NULL,
  "totalTax" REAL NOT NULL,
  "totalAmount" REAL NOT NULL,
  "cgst" REAL NOT NULL,
  "sgst" REAL NOT NULL,
  "igst" REAL NOT NULL,
  "cess" REAL NOT NULL,
  "status" TEXT NOT NULL DEFAULT 'COMPLETED',
  "holdRef" TEXT,
  "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY ("customerId") REFERENCES "Customer" ("id") ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS "ReceiptLine" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "receiptId" INTEGER NOT NULL,
  "itemId" INTEGER NOT NULL,
  "batchId" INTEGER,
  "quantity" REAL NOT NULL,
  "unitPrice" REAL NOT NULL,
  "discount" REAL NOT NULL DEFAULT 0,
  "taxAmount" REAL NOT NULL,
  "lineTotal" REAL NOT NULL,
  "taxRateId" INTEGER,
  FOREIGN KEY ("receiptId") REFERENCES "Receipt" ("id") ON DELETE CASCADE,
  FOREIGN KEY ("itemId") REFERENCES "Item" ("id") ON DELETE CASCADE,
  FOREIGN KEY ("batchId") REFERENCES "Batch" ("id") ON DELETE SET NULL,
  FOREIGN KEY ("taxRateId") REFERENCES "Tax" ("id") ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS "PaymentMethod" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "code" TEXT NOT NULL UNIQUE,
  "name" TEXT NOT NULL,
  "meta" TEXT
);

CREATE TABLE IF NOT EXISTS "Payment" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "receiptId" INTEGER NOT NULL,
  "paymentMethodId" INTEGER NOT NULL,
  "amount" REAL NOT NULL,
  "reference" TEXT,
  "status" TEXT NOT NULL DEFAULT 'SUCCESS',
  "parentPaymentId" INTEGER,
  "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY ("receiptId") REFERENCES "Receipt" ("id") ON DELETE CASCADE,
  FOREIGN KEY ("paymentMethodId") REFERENCES "PaymentMethod" ("id") ON DELETE RESTRICT,
  FOREIGN KEY ("parentPaymentId") REFERENCES "Payment" ("id") ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS "Role" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "name" TEXT NOT NULL UNIQUE,
  "permissions" TEXT,
  "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS "User" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "username" TEXT NOT NULL UNIQUE,
  "password" TEXT NOT NULL,
  "pin" TEXT,
  "fullName" TEXT NOT NULL,
  "roleId" INTEGER NOT NULL,
  "active" INTEGER NOT NULL DEFAULT 1,
  "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updatedAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY ("roleId") REFERENCES "Role" ("id") ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS "AuditLog" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "userId" INTEGER,
  "action" TEXT NOT NULL,
  "description" TEXT,
  "createdAt" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS "Setting" (
  "id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  "key" TEXT NOT NULL UNIQUE,
  "value" TEXT NOT NULL
);

-- Additional indexes for search/scanning performance
CREATE INDEX IF NOT EXISTS "idx_item_name" ON "Item" ("name");
CREATE INDEX IF NOT EXISTS "idx_item_sku" ON "Item" ("sku");
CREATE INDEX IF NOT EXISTS "idx_customer_phone" ON "Customer" ("phone");
CREATE INDEX IF NOT EXISTS "idx_receipt_date" ON "Receipt" ("date");

COMMIT;
PRAGMA foreign_keys=ON;